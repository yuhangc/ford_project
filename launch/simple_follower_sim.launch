<launch>
  <arg name="world_file"  default="$(find ford_project)/worlds/human_curb.world"/>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>
  
  <include file="$(find ford_project)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="init_pose" value="-x 9.344 -y 8.9895 -z 0 -Y 3.14159265"/>
  </include>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
  
  <!-- custom nodes for follower control -->
  <node pkg="ford_project" type="imu_manager" name="imu_manager"/>
  <node pkg="ford_project" type="vision_test.py" name="vision_tracker">
  	<param name="search_width" type="int" value="20"/>
  	<param name="rgb_image_source" value="camera/rgb/image_raw"/>
  	<param name="depth_image_source" value="camera/depth/image_raw"/>
  	<param name="depth_scale" type="double" value="1"/>
  </node>
  <node pkg="ford_project" type="imu_filter_Kalman.py" name="tilt_filter">
  	<param name="filter_mode" value="off"/>
  </node>
  <node pkg="ford_project" type="gesture_DTW" name="gesture_detector">
  	<param name="gesture_data_path" value="$(find ford_project)/gesture_data"/>
  </node>
  <node pkg="ford_project" type="simple_follower.py" name="simple_follower">
  	<param name="state_init" value="Idle"/>
  	<param name="human_input_mode" value="tilt_control"/>
  	<param name="dist_desired_follower" type="double" value="2.0"/>
  	<param name="kp_follower" type="double" value="1.0"/>
  	<param name="dist_range_min" type="double" value="0.3"/>
  	<param name="dist_range_max" type="double" value="5.0"/>
  	<param name="pitch_offset" type="double" value="0.2"/>
  	<param name="roll_offset" type="double" value="0.2"/>
  </node>
  <node pkg="ford_project" type="velocity_smoother.py" name="velocity_smoother">
  	<param name="maximum_increment_linear" type="double" value="0.02"/>
  	<param name="maximum_increment_angular" type="double" value="0.05"/>
  	<param name="velocity_cap_linear" type="double" value="2.0"/>
  	<param name="velocity_cap_angular" type="double" value="2.0"/>
  	<remap from="cmd_vel_smooth" to="cmd_vel_mux/input/teleop"/>
  </node>
</launch>
